// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using exercise.wwwapi.Data;

#nullable disable

namespace exercise.wwwapi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("exercise.wwwapi.Models.Cohort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("course_id");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("cohorts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("body");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_at");

                    b.Property<int>("PostId")
                        .HasColumnType("integer")
                        .HasColumnName("post_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Post 1 Body",
                            CreatedAt = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Body = "Post 2 Body",
                            CreatedAt = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            PostId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Body = "Post 3 Body",
                            CreatedAt = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            PostId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Body = "Post 4 Body",
                            CreatedAt = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            PostId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Body = "Post 5 Body",
                            CreatedAt = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            PostId = 5,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("course_name");

                    b.HasKey("Id");

                    b.ToTable("course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseName = "Course 1"
                        },
                        new
                        {
                            Id = 2,
                            CourseName = "Course 2"
                        },
                        new
                        {
                            Id = 3,
                            CourseName = "Course 3"
                        },
                        new
                        {
                            Id = 4,
                            CourseName = "Course 4"
                        },
                        new
                        {
                            Id = 5,
                            CourseName = "Course 5"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("exercise");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Exercise 1 description",
                            Title = "Exercise 1",
                            UnitId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Exercise 2 description",
                            Title = "Exercise 2",
                            UnitId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Exercise 3 description",
                            Title = "Exercise 3",
                            UnitId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Exercise 4 description",
                            Title = "Exercise 4",
                            UnitId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Exercise 5 description",
                            Title = "Exercise 5",
                            UnitId = 5
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("course_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("modules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Title = "Course 1"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Title = "Course 2"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Title = "Course 3"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            Title = "Course 4"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            Title = "Course 5"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer")
                        .HasColumnName("author_id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("body");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("Likes")
                        .HasColumnType("integer")
                        .HasColumnName("likes");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Body = "Post 1 Body",
                            CreatedAt = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            Likes = 5
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Body = "Post 2 Body",
                            CreatedAt = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            Likes = 3
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Body = "Post 3 Body",
                            CreatedAt = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            Likes = 10
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Body = "Post 4 Body",
                            CreatedAt = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            Likes = 7
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            Body = "Post 5 Body",
                            CreatedAt = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            Likes = 9
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ModuleId")
                        .HasColumnType("integer")
                        .HasColumnName("module_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("units");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModuleId = 1,
                            Title = "Module 1"
                        },
                        new
                        {
                            Id = 2,
                            ModuleId = 2,
                            Title = "Module 2"
                        },
                        new
                        {
                            Id = 3,
                            ModuleId = 3,
                            Title = "Module 3"
                        },
                        new
                        {
                            Id = 4,
                            ModuleId = 4,
                            Title = "Module 4"
                        },
                        new
                        {
                            Id = 5,
                            ModuleId = 5,
                            Title = "Module 5"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.Models.UserInfo.Credential", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password_hash");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.ToTable("credentials");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "test1@test1",
                            PasswordHash = "$2a$11$NlNrSkH2Uop6Nl90BHeF9udj/s5N79m9j94htBwtiwPMzoJ5EXozW",
                            Role = 0,
                            Username = "test1"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "test2@test2",
                            PasswordHash = "$2a$11$MYFrTWP6v64imGdsbibutOW/DSZiu3wg5rWR1Nm5Zjb5XBNut5HKq",
                            Role = 1,
                            Username = "test2"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "test3@test3",
                            PasswordHash = "$2a$11$JyMDiDHwh8hrcjNmp0zb8uZGFettl5dyJ3FDa3S5iOCTYnDn6GZqm",
                            Role = 0,
                            Username = "test3"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "test4@test4",
                            PasswordHash = "$2a$11$.daNf2PApH/oqC8MGCQq5uHqw2zmjmIiIB8A6WZ/nLXjbI4iuQsEW",
                            Role = 1,
                            Username = "test4"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "test5@test5",
                            PasswordHash = "$2a$11$HmeURzynKz6PqTVeZxfDIeg6MRpzI/5ZAY1GyHW0hJuNUvv7ixOOO",
                            Role = 0,
                            Username = "test5"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.Models.UserInfo.Profile", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("bio");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("first_name");

                    b.Property<string>("Github")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("github");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("phone");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("photo_url");

                    b.Property<string>("Specialism")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("specialism");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("UserId");

                    b.ToTable("profile");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Bio = "",
                            EndDate = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            FirstName = "Michael",
                            Github = "",
                            LastName = "Jackson",
                            Specialism = "Fullstack",
                            StartDate = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            UserId = 2,
                            Bio = "",
                            EndDate = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            FirstName = "Michael",
                            Github = "",
                            LastName = "Jordan",
                            Specialism = "Backend",
                            StartDate = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            UserId = 3,
                            Bio = "",
                            EndDate = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            FirstName = "Lionel",
                            Github = "",
                            LastName = "Messi",
                            Specialism = "Fullstack",
                            StartDate = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            UserId = 4,
                            Bio = "",
                            EndDate = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            FirstName = "Cristiano",
                            Github = "",
                            LastName = "Ronaldo",
                            Specialism = "Fullstack",
                            StartDate = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            UserId = 5,
                            Bio = "",
                            EndDate = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc),
                            FirstName = "Lionel",
                            Github = "",
                            LastName = "Richie",
                            Specialism = "Frontend",
                            StartDate = new DateTime(2025, 9, 5, 11, 2, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.Models.UserInfo.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CohortId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CohortId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CohortId = 1
                        },
                        new
                        {
                            Id = 2,
                            CohortId = 2
                        },
                        new
                        {
                            Id = 3,
                            CohortId = 3
                        },
                        new
                        {
                            Id = 4,
                            CohortId = 4
                        },
                        new
                        {
                            Id = 5,
                            CohortId = 5
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Cohort", b =>
                {
                    b.HasOne("exercise.wwwapi.Models.Course", "Course")
                        .WithMany("Cohorts")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Comment", b =>
                {
                    b.HasOne("exercise.wwwapi.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("exercise.wwwapi.Models.UserInfo.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Exercise", b =>
                {
                    b.HasOne("exercise.wwwapi.Models.Unit", "Unit")
                        .WithMany("Exercises")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Module", b =>
                {
                    b.HasOne("exercise.wwwapi.Models.Course", "Course")
                        .WithMany("Modules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Post", b =>
                {
                    b.HasOne("exercise.wwwapi.Models.UserInfo.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Unit", b =>
                {
                    b.HasOne("exercise.wwwapi.Models.Module", "Module")
                        .WithMany("Units")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.UserInfo.Credential", b =>
                {
                    b.HasOne("exercise.wwwapi.Models.UserInfo.User", "User")
                        .WithOne("Credential")
                        .HasForeignKey("exercise.wwwapi.Models.UserInfo.Credential", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.UserInfo.Profile", b =>
                {
                    b.HasOne("exercise.wwwapi.Models.UserInfo.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("exercise.wwwapi.Models.UserInfo.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.UserInfo.User", b =>
                {
                    b.HasOne("exercise.wwwapi.Models.Cohort", "Cohort")
                        .WithMany("Members")
                        .HasForeignKey("CohortId");

                    b.Navigation("Cohort");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Cohort", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Course", b =>
                {
                    b.Navigation("Cohorts");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Module", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.Unit", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("exercise.wwwapi.Models.UserInfo.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Credential")
                        .IsRequired();

                    b.Navigation("Posts");

                    b.Navigation("Profile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
